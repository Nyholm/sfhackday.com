name: Deploy

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  lambda:
    name: AWS
    runs-on: Ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@2.9.0
        with:
          php-version: 8.0
          coverage: none

      - uses: actions/setup-node@v2
        with:
          node-version: '15'

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: npm-{{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}
            npm-

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ runner.os }}-${{ hashFiles('composer.*') }}
          restore-keys: |
            composer-${{ runner.os }}-
            composer-

      - name: Download NPM dependencies
        run: npm ci

      - name: Build assets
        run:  node_modules/.bin/encore production

      - name: Download dependencies
        env:
          APP_ENV: prod
        run: composer install --no-interaction --optimize-autoloader --no-dev --no-scripts

      - name: Warm up cache
        run: bin/console cache:warmup --env=prod

      - name: Disable .env files
        run: echo "<?php return ['APP_ENV'=>'prod'];" > .env.local.php

      - name: Sercerless deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-central-1
        run: ./node_modules/serverless/bin/serverless.js deploy --stage=prod --force
